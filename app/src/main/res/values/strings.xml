<resources>
    <string name="app_name">BigGirl</string>

    <string name="navigation_drawer_open">Open navigation drawer</string>
    <string name="navigation_drawer_close">Close navigation drawer</string>
    <string name="option">设置</string>
    <string name="action_setwallpaer">设置壁纸</string>
    <string name="action_share">分享</string>
    <string name="action_auto_play">自动预览</string>
    <string name="bgm">Music</string>
    <string name="communicate">Communicate</string>
    <string name="about">关于我</string>
    <string name="action_map">Map</string>
    <string name="about_name">1900</string>
    <string name="about_github">https://github.com/1900Star</string>
    <string name="about_sign">O ever youthful, O ever weeping.</string>
    <string name="about_project_introduce">
        BigGirl妹子Gank.io客户端，整体架构参照Google官方的RxMvpDemo示例，写这个项目主要是为公司项目重构做准备。
        MVP-Rxjava-Dagger2最目前非常流行且比较成熟的架构模式,Dagger2的引入进一步降低Presenter层和View层的耦合。
        \n\tRxJava\n\tRxBus\n\tOkhttp\n\tRetrofit\n\tButterknife\n\tDagger2\n\tGreenDao3.0\n\tGlide\n\tLeakcanary
        \n\nBigGirl：https://github.com/1900Star/BigGirl\n\nApi接口提供：http://gank.io/api\n\n感谢开源社区，特别感谢：干货集中营
    </string>
    <string name="preject_introduce">关于项目</string>
    <string name="feir">李菲儿</string>
    <string name="fan_xiao_xuan">范晓萱</string>
    <string name="video">漂亮</string>
    <string name="load_more">正在加载更多！！！！</string>

    <string name="favorite">收藏</string>
    <string name="open_broswer">在浏览器中打开</string>
    <string name="title_activity_maps">Map</string>
    //*********音乐
    <string name="music">音乐</string>
    <string name="startTime">0:00</string>
    <string name="endTime">0:00</string>
    <string name="short_line">-</string>
    <string name="songName">Forever</string>
    <string name="singerName">young</string>
    <string name="large_text">
        "Components with responsive elevations may encounter other components as they move between "
        "their resting elevations and dynamic elevation offsets. Because material cannot pass "
        "through other material, components avoid interfering with one another any number of ways, "
        "whether on a per component basis or using the entire app layout.\n"
        "On a component level, components can move or be removed before they cause interference. "
        "For example, a floating action button (FAB) can disappear or move off screen before a "
        "user picks up a card, or it can move if a snackbar appears.\n"
        "On the layout level, design your app layout to minimize opportunities for interference. "
        "For example, position the FAB to one side of stream of a cards so the FAB won’t interfere "
        "when a user tries to pick up one of cards.\n\n"
    </string>

</resources>
